require: requirements.sc

init:
    $global.$ = {
        __noSuchProperty__: function(property) {
            return $jsapi.context()[property];
        }
    };

    bind("preMatch", function($context) {
        var $ = $context;
        $.session.AUTH = $.injector.auth; 
        $.session.API = $.injector.api; 
    });

theme: /


    state: StartChat
        event!: noMatch
        q!: $regex</test>
        q!: test
        q!: 1
        script:



            if(!$session.firstMessage) {
                var start = Date.now();
                while (Date.now() - start < 5000) { }
                $session.firstMessage = true;
            }


            var userChannel = $request.rawRequest.chatType; // —Ç–∏–ø –∫–∞–Ω–∞–ª–∞ telegram –∏–ª–∏ whatsapp
            var cus = $request.userFrom.id;

            var cus = '79000546917'; // TODO: —É–¥–∞–ª–∏—Ç—å
            var userChannel = 'whatsapp'; // TODO: —É–¥–∞–ª–∏—Ç—å

            if (userChannel == "telegram") {
                var butrixLeadId = getUserByBitrix(cus, "telegram");
            } else if (userChannel == "whatsapp") {
                var butrixLeadId = getUserByBitrix(cus, "whatsapp");
            }

            // TODO: –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ !_.isNull(butrixLeadId)

            var promt = getSystemPrompt(userChannel); // –°–æ–±–∏—Ä–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç

            if (!$session.messages) $session.messages = [];
            $session.messages.push({
                "role": "user",
                "content": $request.query
            });



            // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞ OpenAI
            var maxRetries = 5;
            var currentRetry = 0;
            var tempRes, userResponse, data, status;


            while (currentRetry < maxRetries) {
                try {
                    tempRes = askBrain(promt, $session.messages);
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
                    if (!tempRes) {
                        currentRetry++;
                        log('[ +++ ERROR] askBrain –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø–æ–ø—ã—Ç–∫–∞ ' + currentRetry + ' –∏–∑ ' + maxRetries);
                        
                        if (currentRetry >= maxRetries) {
                            $reactions.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ—Ö–æ–¥—É –ø–æ–¥–≤–∏—Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. —è –Ω–µ –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
                            return;
                        }
                
                
                        // –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                        log('[ +++ DEBUG] –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...');
                        var start = Date.now();
                        while (Date.now() - start < 5000) { }
                        continue;
                    }

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫—É –≤ –æ—Ç–≤–µ—Ç–µ
                    if (tempRes.error) {
                        currentRetry++;
                        log('[+++ ERROR] askBrain –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É, –ø–æ–ø—ã—Ç–∫–∞ ' + currentRetry + ' –∏–∑ ' + maxRetries + ': ' + toPrettyString(tempRes));
                        
                        if (currentRetry >= maxRetries) {
                            $reactions.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.');
                            return;
                        }
                        
                        // –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                        log('[+++ DEBUG] –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...');
                        var start = Date.now();
                        while (Date.now() - start < 5000) {}
                        continue;
                    }

                    // –ù–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON –æ–±—ä–µ–∫—Ç
                    if (typeof tempRes === 'object' && tempRes !== null) {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ
                        if (tempRes.error) {
                            log('[+++ ERROR] –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞: ' + toPrettyString(tempRes));
                            $reactions.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
                            return;
                        }
                        
                        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
                        userResponse = tempRes.userResponse;
                        data = tempRes.data;
                        status = tempRes.status;
                        
                    } else {
                        // –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç - –ª–æ–≥–∏—Ä—É–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ fallback
                        log('[+++ ERROR] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç askBrain: ' + toPrettyString(tempRes));
                        userResponse = String(tempRes);
                        data = null;
                        status = null;
                    }

                    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    log('[DEBUG] üß† –¢–æ —á—Ç–æ –ø—Ä–∏—à–ª–æ –æ—Ç openAI = ' + toPrettyString(tempRes));
                    log('[DEBUG] üß† userResponse = ' + toPrettyString(userResponse));
                    log('[DEBUG] üß† data = ' + toPrettyString(data));
                    log('[DEBUG] üß† status = ' + toPrettyString(status));

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    if (userResponse && typeof userResponse === 'string') {
                        $reactions.answer(userResponse);
                    }

                    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
                    $session.messages.push({
                        "role": "assistant",
                        "content": userResponse
                    });

  
                    var leadManagerInstance = new leadManager($context);

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∏—Ç—Ä–∏–∫—Å–µ
                    if (status) {
                        leadManagerInstance.updateLeadFields(butrixLeadId, {
                            "STATUS_ID": status
                        });
                    }

                    // –û–±–Ω–æ–≤–ª—è–µ–º –¢–µ–º–∞—Ç–∏–∫–∏ –∏ –º–∏–∫—Ä–æ—Ç–µ–º–∞—Ç–∏–∫–∏ + —Å—Ç–∞—Ç—É—Å—ã
                    if (data) {
                        var bitrixFields = {};
                        
                        log('[DEBUG] data.themes = ' + toPrettyString(data.themes));
                        log('[DEBUG] data.micro_themes = ' + toPrettyString(data.micro_themes));
                        
                        if (data.themes && data.themes.length > 0) {
                            bitrixFields.userThemes = String(data.themes[0].id);
                            log('[DEBUG] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ–º–∞—Ç–∏–∫–∞: ' + data.themes[0].id);
                        }
                        
                        if (data.micro_themes && data.micro_themes.length > 0) {
                            bitrixFields.userMicroThemes = String(data.micro_themes[0].id);
                            log('[DEBUG] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –º–∏–∫—Ä–æ—Ç–µ–º–∞—Ç–∏–∫–∞: ' + data.micro_themes[0].id);
                        }
                        
                        if (data.urgencyLevels && data.urgencyLevels.length > 0) {
                            bitrixFields.userUrgencyLevels = String(data.urgencyLevels[0].id);
                            log('[DEBUG] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å: ' + data.urgencyLevels[0].id);
                        } else if (data.additional && data.additional.urgency) {
                            var urgencyMap = {
                                "–Ω–∏–∑–∫–∞—è": "106",
                                "—Å—Ä–µ–¥–Ω—è—è": "104", 
                                "–≤—ã—Å–æ–∫–∞—è": "102"
                            };
                            var urgencyId = urgencyMap[data.additional.urgency.toLowerCase()];
                            if (urgencyId) {
                                bitrixFields.userUrgencyLevels = urgencyId;
                                log('[DEBUG] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å: ' + urgencyId);
                            }
                        }
                        
                        if (data.client_name) {
                            bitrixFields.userName = data.client_name;
                        }
                        
                        if (data.client_phone) {
                            bitrixFields.userPhone = data.client_phone;
                        }

                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ë–∏—Ç—Ä–∏–∫—Å
                        if (Object.keys(bitrixFields).length > 0) {
                            try {
                                var updateResult = leadManagerInstance.updateLeadFields(butrixLeadId, bitrixFields);
                                log('[DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–∏—Ç—Ä–∏–∫—Å: ' + toPrettyString(updateResult));

                                // –ü–æ–ª—É—á–∞–µ–º promt_get_result –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ø—Ä–æ–º—Ç–æ–≤
                                var promt_get_result = prompt.promt_get_result;
                                var messages = $session.messages;

                                // –í—ã–∑—ã–≤–∞–µ–º askBrain —Å –Ω—É–∂–Ω—ã–º –ø—Ä–æ–º—Ç–æ–º –∏ –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π
                                var brainRes = askBrain(promt_get_result, messages);

                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
                                if (brainRes && brainRes.userResponse) {
                                    // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ –ø–æ–ª–µ UF_CRM_1750364958
                                    leadManagerInstance.updateLeadFields(butrixLeadId, {
                                        "UF_CRM_1750364958": brainRes.userResponse // —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
                                    });
                                    log('[+++ DEBUG] –û–±–Ω–æ–≤–ª–µ–Ω–æ UF_CRM_1750364958 –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ: ' + brainRes.userResponse);
                                } else {
                                    log('[+++ ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å userResponse –∏–∑ askBrain –¥–ª—è promt_get_result: ' + toPrettyString(brainRes));
                                }
                            } catch (bitrixError) {
                                log('[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ë–∏—Ç—Ä–∏–∫—Å: ' + toPrettyString(bitrixError));
                            }
                        } else {
                            log('[DEBUG] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ');
                        }
                    }

                    // –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                    break;

                } catch (error) {
                    currentRetry++;
                    log('[ERROR] askBrain –≤—ã–±—Ä–æ—Å–∏–ª –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –ø–æ–ø—ã—Ç–∫–∞ ' + currentRetry + ' –∏–∑ ' + maxRetries + ': ' + toPrettyString(error));
                    
                    if (currentRetry >= maxRetries) {
                        $reactions.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.');
                        return;
                    }
                    
                    // –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                    log('[DEBUG] –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...');
                    var start = Date.now();
                    while (Date.now() - start < 5000) {
                        // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
                    }
      
                }
            }

    state: Stop
        q!: 2
        script: $jsapi.stopSession();
        a: –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω.

    state: 3
        q!: 3
        script: 
            var result = getUserByBitrix('79833834615', "whatsapp");
            log('[<insert>] üß†üß†üß†1 result = ' + toPrettyString(result));
            $reactions.answer(JSON.stringify(result));
            var result = getUserByBitrix('986859574', "telegram");
            log('[+++] üß†üß†üß†2 result = ' + toPrettyString(result));
            $reactions.answer(JSON.stringify(result));


    # TODO: –ù—É–∂–Ω–æ –Ω–∞ –±—É–¥—É—â–µ–µ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤—Å–µ—Ö –ø–µ—Ä–µ–ø–∏—Å–æ–∫ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ—Ü–µ–Ω–∫–∏
    # TODO: 


    state: 4\
        q!: 4
        script: 
            var cus = '79000546917'; // TODO: —É–¥–∞–ª–∏—Ç—å
            var userChannel = 'whatsapp'; // TODO: —É–¥–∞–ª–∏—Ç—å

            var result = getUserByBitrix(cus, userChannel);
            $reactions.answer(JSON.stringify(result));






